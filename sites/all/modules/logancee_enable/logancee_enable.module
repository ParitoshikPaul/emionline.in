<?php

/**
 * Implementation of hook_menu().
 */
function logancee_enable_menu() {
  $items = array();

  $items['admin/config/development/logancee-enable'] = array(
    'title' => 'logancee Enable',
    'description' => 'Enable all features of the logancee platform',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('logancee_enable_admin_settings'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;

}

/**
 * Builds the logancee_enable admininstration settings form.
 */
function logancee_enable_admin_settings($form, &$form_state) {

  $form = array();

  // The function used to scan for install profiles is only called
  // https://api.drupal.org/api/drupal/includes%21install.core.inc/function/install_find_profiles/7

  //$profiles = install_find_profiles();
  $options = array();
  $profiles = logancee_enable_find_profiles();

  foreach ($profiles as $profile) {
    $options[$profile->name] = t($profile->name);
  }

  $current_profile = drupal_get_profile();

  //https://api.drupal.org/api/drupal/includes%21common.inc/function/drupal_get_profile/7
  //https://api.drupal.org/api/drupal/includes%21install.inc/function/drupal_install_profile_distribution_name/7

  if ($current_profile == 'standard' || $current_profile == 'minimal') {
    $status = t('You are currently using the @profile profile.', array('@profile' => $current_profile));
  }
  else {
    $status = t('You are currently using the @profile profile.  Any modules included in
    this profile that are not included in the profile you switch to or are not included
    in sites/all/modules will be disabled... INCLUING THE PROFILE SWITCHER MODULE!  If
    Profile Switcher not enabled in the new profile, you will need to install it to switch
    back.', array('@profile' => $current_profile));
  }


  //https://api.drupal.org/api/drupal/includes%21common.inc/function/drupal_get_profile/7
  //https://api.drupal.org/api/drupal/includes%21install.inc/function/drupal_install_profile_distribution_name/7

  $form['profile_switcher_status'] = array(
    '#markup' => $status,
  );

  $form['profile_switcher_profile_old'] = array(
    '#type' => 'hidden',
    '#default_value' => $current_profile,
  );

  $form['profile_switcher_profile'] = array(
    '#type' => 'select',
    '#title' => t('Profile'),
    '#options' => $options,
    '#default_value' => $current_profile,
    '#description' => t('List of profiles currently available from /profiles'),
  );


  $form = system_settings_form($form);
  $form['#submit'][] = 'logancee_enable_admin_settings_submit';
  $form['actions']['submit']['#value'] = t('Switch Profile');
  return ($form);

}

/**
 * Builds the profile_switcher admininstration settings form.
 */
function logancee_enable_find_profiles() {
  //
  return file_scan_directory(DRUPAL_ROOT . '/profiles/logancee', '/\.profile$/', array('key' => 'name'));
}

/**
 * custom
 */
function logancee_enable_admin_settings_submit($form, &$form_state) {

  $new_profile = $form['profile_switcher_profile']['#value'];
  $old_profile = $form['profile_switcher_profile_old']['#value'];

  if ($new_profile == $old_profile) {
    $old_profile = FALSE;
  }
  variable_set('install_profile', $new_profile);

  $new_status = db_query('SELECT status FROM {system} WHERE name = :name', array(':name' => $new_profile))->fetchField();

  if (empty($new_status)) {

    // Unlike modules, profiles aren't added to the system table just because the
    // files are added to /profiles.  They are added after they are active.  We
    // need to add them before that so they are BOTH active and enabled.

    // Cache a fully-built schema.
    drupal_get_schema(NULL, TRUE);
    system_rebuild_module_data();

    // Flush all caches to ensure that any full bootstraps during the installer
    // do not leave stale cached data, and that any content types or other items
    // registered by the install profile are registered correctly.
    drupal_flush_all_caches();

  }

  if (!$new_status) {
    $new_profile_activated = db_update('system')// Table name no longer needs {}
    ->fields(array(
        'status' => 1,
      ))
      ->condition('name', $new_profile, '=')
      ->execute();
  }

  if ($old_profile) {
    //@TODO: Add check to see if new profile was enabled
    //disable the old profile if possible
    $old_status = db_query('SELECT status FROM {system} WHERE name = :name', array(':name' => $old_profile))->fetchField();

    if ($old_status) {

      $old_profile_deactivated = db_update('system')// Table name no longer needs {}
      ->fields(array(
          'status' => 0,
        ))
        ->condition('name', $old_profile, '=')
        ->execute();
    }

    drupal_set_message(t('@new_profile was enabled.  @old_profile was disabled.', array(
          '@new_profile' => $new_profile,
          '@old_profile' => $old_profile
        )));
  }
  else {
    drupal_set_message(t('@new_profile was re-enabled.', array('@new_profile' => $new_profile)));
  }

  logancee_enable_set_modules();

  drupal_set_message("Installed logancee modules");

  drupal_flush_all_caches();

  logancee_enable_set_profile_data();

}


function logancee_enable_set_modules() {
  $modules = array('logancee_enable_store'); // Array of module names
  $enable_dependencies = TRUE; // Whether or not to enable dependant modules

  module_enable($modules, $enable_dependencies);

}

function logancee_enable_set_profile_data() {

  $dir_root = dirname($_SERVER['SCRIPT_FILENAME']);
  $path_theme = $dir_root . "/profiles/logancee/";

  require_once $path_theme . 'logancee.profile';

  variable_set('selected_theme_name', 'loganceevisual_subtheme');

  $theme = variable_get('selected_theme_name');

  //run all the functions in the .profile file
  logancee_set_theme();
  logancee_insert_terms();
  logancee_set_shortcodes();
  batch_set(logancee_insert_custom_blocks_batch());
  batch_set(logancee_insert_front_main_slides_batch());
  logancee_insert_fluid_main_slides();
  batch_set(logancee_insert_parallax_slides_batch());
  logancee_insert_multiscroll_slides();
  logancee_insert_fluid_boxes();
  logancee_insert_front_carousel();
  batch_set(logancee_insert_blog_items_batch());
  batch_set(logancee_insert_products_batch());
  logancee_insert_pages();
  logancee_insert_clients();
  logancee_insert_fluid2_main_slides();
  batch_set(logancee_insert_front_main_slides2_batch());
  logancee_revert_features();
  logancee_set_frontpage();
  logancee_enable_set_blocks();
}

function logancee_enable_set_blocks() {
  // Enable some standard blocks.
  $default_theme = 'loganceevisual_subtheme';
  $admin_theme = 'seven';
  $blocks = array(
    array(
      'module' => 'blog',
      'delta' => 'recent',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'visibility' => 1,
      'pages' => 'blog*',
      'title' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'views',
      'delta' => 'blog_categories-block',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'visibility' => 1,
      'pages' => 'blog*',
      'title' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'logancee_menu',
      'delta' => 'mobile_menu',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'navigation_mobile',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'commerce_multicurrency',
      'delta' => 'currency_menu',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'currency',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),array(
      'module' => 'locale',
      'delta' => 'language',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'language_switch',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'views',
      'delta' => 'related_products-block',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'visibility' => 0,
      'pages' => '',
      'title' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'tb_megamenu',
      'delta' => 'main-menu',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'navigation',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'panels_mini',
      'delta' => 'footer_blocks',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'footer',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'search',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'node',
      'delta' => 'recent',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'dashboard_main',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'powered-by',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'footer',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'new',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'dashboard_sidebar',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'dashboard_sidebar',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
  );

  try {

    //Update query
    foreach ($blocks as $record) {

      db_merge('block')->key(array(
        'theme' => $record['theme'],
        'delta' => $record['delta'],
        'module' => $record['module'],
      ))
        ->fields(array(
          'status' => $record['status'],
          'weight' => $record['weight'],
          'visibility' => $record['visibility'],
          'region' => $record['region'],
          'pages' => $record['pages'],
          'title' => $record['title'],
          'cache' => $record['cache']
        ))
        ->execute();
    }
  } catch (PDOException $e) {
    drupal_set_message(t('Error: %message', array('%message' => $e->getMessage())), 'error');
  }

  db_update('block')
    ->fields(array(
      'status' => 1,
      'weight' => -10,
      'region' => 'search',
    ))
    ->condition('module', 'search')
    ->condition('delta', 'form')
    ->execute();

  db_update('block')
    ->fields(array(
      'status' => 0,
      'weight' => -10,
      'region' => 'disabled',
    ))
    ->condition('module', 'system')
    ->condition('delta', 'navigation')
    ->execute();

  db_update('block')
    ->fields(array(
      'status' => 0,
      'weight' => -10,
      'region' => 'disabled',
    ))
    ->condition('module', 'user')
    ->condition('delta', 'login')
    ->execute();
}

function logancee_enable_set_menus() {

}